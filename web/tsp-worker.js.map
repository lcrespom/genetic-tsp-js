{"version":3,"sources":["webpack:///webpack/bootstrap ea3cc644e797f51c7c40","webpack:///./src/tsp.ts","webpack:///./src/engine.ts","webpack:///./src/tsp-worker.ts"],"names":[],"mappings":"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","file":"tsp-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ea3cc644e797f51c7c40","import { Solution, EngineParams, Engine } from './engine'\n\n// ----- TSP Engine Parameters -----\nexport interface TspParams extends EngineParams {\n\tnumCities: number\n}\n\n\n// ----- A map of cities and their respective distances -----\nexport class CountryMap {\n\tnumCities: number\n\tdistances: number[][]\n\tcityX: number[]\n\tcityY: number[]\n\n\tconstructor(numCities: number) {\n\t\tthis.numCities = numCities\n\t\tthis.cityX = []\n\t\tthis.cityY = []\n\t\tthis.initCities(this.cityX, this.cityY)\n\t\tthis.distances = fillArray(() => new Array(), numCities)\n\t\tfor (let i = 0; i < numCities; i++)\n\t\t\tfor (let j = 0; j < numCities; j++)\n\t\t\t\tthis.distances[i][j] = this.calcDistance(\n\t\t\t\t\tthis.cityX[i], this.cityY[i], this.cityX[j], this.cityY[j])\n\t}\n\n\tgetDistance(i: number, j: number): number {\n\t\treturn this.distances[i][j]\n\t}\n\n\tprivate initCities(cityX: number[], cityY: number[]): void {\n\t\tif (this.numCities < 100) {\n\t\t\t// Avoid cities from being too close\n\t\t\tlet visited: boolean[] = []\n\t\t\tlet visit\n\t\t\tfor (let i = 0; i < this.numCities; i++) {\n\t\t\t\tdo {\n\t\t\t\t\tvisit = randomInt(149) + 1\n\t\t\t\t} while (visited[visit])\n\t\t\t\tvisited[visit] = true\n\t\t\t\tcityX[i] = 20 + (visit % 15) * 40 + randomInt(10)\n\t\t\t\tcityY[i] = 30 + (visit / 15) * 40 + randomInt(10)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Just spread cities randomly\n\t\t\tlet width = 640\n\t\t\tlet height = 480\n\t\t\tfor (let i = 0; i < this.numCities; i++) {\n\t\t\t\tcityX[i] = Math.random() * width\n\t\t\t\tcityY[i] = Math.random() * height\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calcDistance(x1: number, y1: number, x2: number, y2: number): number {\n\t\tlet dx = x2 - x1\n\t\tlet dy = y2 - y1\n\t\treturn Math.sqrt(dx * dx + dy * dy)\n\t}\n}\n\n\n// ----- A specific solution sequence for the TSP -----\nexport class TspSolution extends Solution {\n\tcities: number[]\n\tmap: CountryMap\n\teval: number\n\tflags: boolean[]\n\n\tconstructor(map: CountryMap, initCities = true) {\n\t\tsuper()\n\t\tthis.map = map\n\t\tthis.eval = Number.NEGATIVE_INFINITY\n\t\tthis.flags = fillArray(false, map.numCities)\n\t\tif (initCities) {\n\t\t\tthis.cities = fillArray(-1, map.numCities)\n\t\t\tthis.permuteCities()\n\t\t\tthis.eval = this.calcTrip()\n\t\t}\n\t}\n\n\tevaluate(): number {\n\t\treturn this.eval\n\t}\n\n\tcombine(other: TspSolution): Solution[] {\n\t\tlet pos = randomInt(this.cities.length)\n\t\tlet mother = this\n\t\tlet father = other\n\t\tlet child = this.combineLeft(pos, mother, father)\n\t\tchild.eval = child.calcTrip()\n\t\tlet combineResults: Solution[] = []\n\t\tcombineResults.push(child)\n\t\tchild = this.combineRight(pos, mother, father)\n\t\tchild.eval = child.calcTrip()\n\t\tcombineResults.push(child)\n\t\treturn combineResults\n\t}\n\n\tequals(other: TspSolution): boolean {\n\t\tif (this.eval != other.eval)\n\t\t\treturn false\n\t\treturn arraysEqual(this.cities, other.cities)\n\t}\n\n\tinvert(): TspSolution {\n\t\tlet inverted = new TspSolution(this.map, false)\n\t\tinverted.cities = this.cities.slice()\n\t\tinverted.cities.reverse()\n\t\tinverted.eval = this.eval\n\t\treturn inverted\n\t}\n\n\n\t// ------------------------------ Privates ------------------------------\n\n\tprivate permuteCities(): void {\n\t\tlet indexes: number[] = []\n\t\tfor (let i = 0; i < this.cities.length; i++)\n\t\t\tindexes[i] = i\n\t\tfor (let i = 0; i < this.cities.length; i++) {\n\t\t\tlet idxSize = this.cities.length - i\n\t\t\tlet pos = randomInt(idxSize)\n\t\t\tthis.cities[i] = indexes[pos]\n\t\t\tindexes[pos] = indexes[idxSize - 1]\n\t\t}\n\t}\n\n\tprivate combineLeft(pos: number, mother: TspSolution, father: TspSolution): TspSolution {\n\t\tlet child = new TspSolution(this.map)\n\t\t// Copy left side of mother\n\t\tchild.cities = mother.cities.slice()\n\t\tchild.initFlags(mother.cities, 0, pos)\n\t\t// Copy not found cities from father starting from right side and wrapping\n\t\tlet fatherPos = pos\n\t\tlet i = 0\n\t\twhile (pos < child.cities.length) {\n\t\t\tlet cityNum = father.cities[fatherPos]\n\t\t\tif (!child.found(cityNum, 0, pos))\n\t\t\t\tchild.cities[pos++] = cityNum\n\t\t\tfatherPos++\n\t\t\tif (fatherPos >= father.cities.length)\n\t\t\t\tfatherPos = 0\n\t\t\ti++\n\t\t\tif (i > father.cities.length)\n\t\t\t\tthrow new Error('Could not combine')\n\t\t}\n\t\treturn child\n\t}\n\n\tprivate combineRight(pos: number, mother: TspSolution, father: TspSolution): TspSolution {\n\t\tlet child = new TspSolution(this.map)\n\t\t// Copy right side of mother\n\t\tchild.cities = mother.cities.slice()\n\t\tchild.initFlags(mother.cities, pos, mother.cities.length)\n\t\t// Copy not found cities from father from beginning\n\t\tlet fatherPos = 0\n\t\tlet i = 0\n\t\twhile (i < pos) {\n\t\t\tlet cityNum = father.cities[fatherPos]\n\t\t\tif (!child.found(cityNum, pos, child.cities.length))\n\t\t\t\tchild.cities[i++] = cityNum\n\t\t\tfatherPos++\n\t\t\tif (fatherPos > father.cities.length)\n\t\t\t\tthrow new Error('Could not combine')\n\t\t}\n\t\treturn child\n\t}\n\n\tprivate initFlags(cts: number[], pos1: number, pos2: number): void {\n\t\tfor (let i = pos1; i < pos2; i++)\n\t\t\tthis.flags[cts[i]] = true\n\t}\n\n\tprivate found(cityNum: number, pos1: number, pos2: number): boolean {\n\t\treturn this.flags[cityNum]\n\t}\n\n\tprivate calcTrip(): number {\n\t\tlet dist = 0\n\t\tfor (let i = 0; i < this.cities.length - 1; i++)\n\t\t\tdist += this.map.getDistance(this.cities[i], this.cities[i + 1])\n\t\tdist += this.map.getDistance(\n\t\t\tthis.cities[this.cities.length - 1], this.cities[0])\n\t\treturn dist\n\t}\n\n}\n\n\n// ----- TSP Genetic Engine -----\nexport class TspEngine extends Engine {\n\n\tmap: CountryMap\n\n\tconstructor(params: TspParams) {\n\t\tsuper(params)\n\t\tthis.map = new CountryMap(params.numCities)\n\t}\n\n\tnewSolution(): Solution {\n\t\treturn new TspSolution(this.map)\n\t}\n\n}\n\n\n// -------------------- Utility functions --------------------\ntype funk<T> = () => T\n\nfunction fillArray<T>(vf: T | funk<T>, count: number): Array<T> {\n\tlet a: Array<T> = []\n\tfor (let i = 0; i < count; i++)\n\t\ta[i] = vf instanceof Function ? vf() : vf\n\treturn a\n}\n\nfunction arraysEqual<T>(a1: Array<T>, a2: Array<T>): boolean {\n\treturn a1.length == a2.length && a1.every((v, i) => v === a2[i])\n}\n\nfunction randomInt(max: number) {\n\treturn Math.floor(Math.random() * max)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tsp.ts","// ----- Engine Parameters -----\nexport interface EngineParams {\n\tpopulation: number\n\t// Elite should be as small as possible\n\telite: number\n\t// Inverting greatly improves quality\n\tinvertRatio: number\n\t// The higher the weight exponent, the biggest bias towards selecting good solutions\n\tweightExponent: number\n}\n\n\n// ----- A solution is an individual of the population -----\nexport abstract class Solution {\n\n\tstatic compareTo(s1: Solution, s2: Solution): number {\n\t\tlet ev1 = s1.evaluate(), ev2 = s2.evaluate()\n\t\tif (ev1 < ev2) return -1\n\t\tif (ev1 > ev2) return +1\n\t\treturn 0\n\t}\n\n\tabstract equals(other: Solution): boolean\n\tabstract evaluate(): number\n\tabstract combine(other: Solution): Solution[]\n\tabstract invert(): Solution\n}\n\n\n// ----- A population is a set of solutions for a given generation -----\nexport class Population {\n\tsolutions: Solution[]\n\tweights: number[]\n\tnumSolutions: number\n\ttotalWeight: number\n\tweightExponent: number\n\n\tconstructor(params: EngineParams) {\n\t\tthis.numSolutions = params.population\n\t\tthis.solutions = []\n\t\tthis.weights = []\n\t\tthis.weightExponent = params.weightExponent\n\t}\n\n\tadd(sol: Solution): void {\n\t\tthis.solutions.push(sol)\n\t}\n\n\tprepareForSelection(): void {\n\t\tthis.solutions.sort(Solution.compareTo)\n\t\tlet max = this.solutions[this.solutions.length - 1].evaluate()\n\t\tthis.totalWeight = 0\n\t\tfor (let i = 0; i < this.numSolutions; i++) {\n\t\t\tlet weight = max - this.solutions[i].evaluate()\n\t\t\tif (this.weightExponent != 1.0)\n\t\t\t\tweight = Math.pow(weight, this.weightExponent)\n\t\t\tthis.totalWeight += weight\n\t\t\tthis.weights[i] = this.totalWeight\n\t\t}\n\t}\n\n\tselect(): Solution {\n\t\tlet r = Math.random() * this.totalWeight\n\t\tfor (let i = 0; i < this.weights.length; i++)\n\t\t\tif (r < this.weights[i])\n\t\t\t\treturn this.solutions[i]\n\t\tthrow new Error('Invalid population state')\n\t}\n\n\tgetIncumbent(): Solution {\n\t\treturn this.solutions[0]\n\t}\n\n\tsize(): number {\n\t\treturn this.solutions.length\n\t}\n\n\thasClone(other: Solution): boolean {\n\t\tfor (let i = 0; i < this.solutions.length; i++)\n\t\t\tif (other.evaluate() == this.solutions[i].evaluate()) return true\n\t\treturn false\n\t}\n\n\tcopySolutions(newGen: Population, numSolutions: number): void {\n\t\tnewGen.solutions = this.solutions.slice()\n\t}\n}\n\n// ----- The engine listener gets notified when a new generation is created -----\nexport interface EngineListener {\n\tengineStep(pop: Population, generationCount: number): void\n}\n\n\n// ----- The engine iterates through generations to optimize a solution -----\nexport abstract class Engine {\n\tparams: EngineParams\n\tstop = false\n\tgeneration: Population\n\tlistener: EngineListener\n\n\tconstructor(params: EngineParams) {\n\t\tthis.params = params\n\t}\n\n\trun(): void {\n\t\tlet generationCount = 0\n\t\tthis.generation = this.randomize()\n\t\tthis.generation.prepareForSelection()\n\t\twhile (!this.stop) {\n\t\t\tthis.step()\n\t\t\tgenerationCount++\n\t\t\tthis.fireStepEvent(this.generation, generationCount)\n\t\t}\n\t}\n\n\tsetListener(listener: EngineListener): void {\n\t\tthis.listener = listener\n\t}\n\n\tabstract newSolution():  Solution\n\n\t// -------------------------- Privates --------------------------\n\n\tprivate step(): void {\n\t\tlet newGen = new Population(this.params)\n\t\tthis.copyElite(this.generation, newGen)\n\t\tthis.generation = this.combine(this.generation, newGen)\n\t\twhile (this.generation.size() < this.params.population)\n\t\tthis.generation.add(this.newSolution())\n\t\tthis.generation.prepareForSelection()\n\t}\n\n\tprivate copyElite(oldGen: Population, newGen: Population): void {\n\t\toldGen.copySolutions(newGen, this.params.elite)\n\t}\n\n\tprivate combine(oldGen: Population, newGen: Population): Population {\n\t\tlet i = this.params.elite\n\t\tlet trials = 0\n\t\twhile (i < this.params.population && trials < this.params.population * 2) {\n\t\t\ttrials++\n\t\t\tlet father = this.generation.select()\n\t\t\tlet mother = this.generation.select()\n\t\t\tif (father.equals(mother)) continue\n\t\t\tif (Math.random() < this.params.invertRatio)\n\t\t\t\tfather = father.invert()\n\t\t\tlet children = father.combine(mother)\n\t\t\tfor (let child of children) {\n\t\t\t\tif (newGen.hasClone(child)) continue\n\t\t\t\tif (i < this.params.population) newGen.add(child)\n\t\t\t\ti++\n\t\t\t}\n\t\t}\n\t\treturn newGen\n\t}\n\n\tprivate fireStepEvent(pop: Population, generationCount: number): void {\n\t\tif (this.listener == null) return\n\t\tthis.listener.engineStep(pop, generationCount)\n\t}\n\n\tprivate randomize(): Population {\n\t\tlet generation = new Population(this.params)\n\t\tfor (let i = 0; i < this.params.population; i++)\n\t\t\tgeneration.add(this.newSolution())\n\t\treturn generation\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/engine.ts","import { Population } from './engine'\nimport { TspEngine, TspParams, CountryMap } from './tsp'\n\n\ntype WorkerPostMessage = (data: any) => void\nlet wkPostMessage: WorkerPostMessage = <WorkerPostMessage>postMessage\n\nself.onmessage = msg => {\n\tswitch (msg.data.command) {\n\t\tcase 'start': return doStart(msg.data.params)\n\t\tdefault: throw Error('Unknown command: ' + msg.data.command)\n\t}\n}\n\nfunction doStart(params) {\n\twkPostMessage('Potato')\n\tlet tsp = initTSP(params)\n\ttsp.setListener({\n\t\tengineStep(pop: Population, genct: number) {\n\t\t\tif (!checkElapsed(500)) return\n\t\t\tlet incumbent = pop.getIncumbent()\n\t\t\tlet status = {\n\t\t\t\tgeneration: genct,\n\t\t\t\tgpm: -1,\n\t\t\t\teval: incumbent.evaluate(),\n\t\t\t\tlastIncumbentGen: -1,\n\t\t\t\telapsed: -1,\n\t\t\t\tlastIncumbentWhen: 0,\n\t\t\t\tincumbent,\n\t\t\t\tmap: buildCities(tsp.map)\n\t\t\t}\n\t\t\twkPostMessage(status)\n\t\t}\n\t})\n\ttsp.run()\n}\n\nfunction initTSP(params): TspEngine {\n\tlet tspParams: TspParams = {\n\t\tnumCities: 200,\n\t\tpopulation: 50,\n\t\telite: 10,\n\t\tinvertRatio: 0.2,\n\t\tweightExponent: 2.0\n\t}\n\treturn new TspEngine(tspParams)\n}\n\nfunction buildCities(map: CountryMap) {\n\tlet cities = <any>[]\n\tfor (let i = 0; i < map.cityX.length; i++)\n\t\tcities.push({ x: map.cityX[i], y: map.cityY[i] })\n\treturn cities\n}\n\n\nlet lastTime = 0\n\nfunction checkElapsed(elapsed: number): boolean {\n\tlet now = Date.now()\n\tif (now - lastTime < elapsed) return false\n\tlastTime = now\n\treturn true\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tsp-worker.ts"],"sourceRoot":""}