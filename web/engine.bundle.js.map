{"version":3,"sources":["webpack:///webpack/bootstrap 809e988576fcb0f16a46","webpack:///./src/engine.ts"],"names":[],"mappings":"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","file":"engine.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 809e988576fcb0f16a46","// ----- Engine Parameters -----\nexport interface EngineParams {\n\tpopulation: number\n\t// Elite should be as small as possible\n\telite: number\n\t// Inverting greatly improves quality\n\tinvertRatio: number\n\t// The higher the weight exponent, the biggest bias towards selecting good solutions\n\tweightExponent: number\n}\n\n\n// ----- A solution is an individual of the population -----\nexport abstract class Solution {\n\n\tstatic compareTo(s1: Solution, s2: Solution): number {\n\t\tlet ev1 = s1.evaluate(), ev2 = s2.evaluate()\n\t\tif (ev1 < ev2) return -1\n\t\tif (ev1 > ev2) return +1\n\t\treturn 0\n\t}\n\n\tabstract equals(other: Solution): boolean\n\tabstract evaluate(): number\n\tabstract combine(other: Solution): Solution[]\n\tabstract invert(): Solution\n}\n\n\n// ----- A population is a set of solutions for a given generation -----\nexport class Population {\n\tsolutions: Solution[]\n\tweights: number[]\n\tnumSolutions: number\n\ttotalWeight: number\n\tweightExponent: number\n\n\tconstructor(params: EngineParams) {\n\t\tthis.numSolutions = params.population\n\t\tthis.solutions = []\n\t\tthis.weights = []\n\t\tthis.weightExponent = params.weightExponent\n\t}\n\n\tadd(sol: Solution): void {\n\t\tthis.solutions.push(sol)\n\t}\n\n\tprepareForSelection(): void {\n\t\tthis.solutions.sort(Solution.compareTo)\n\t\tlet max = this.solutions[this.solutions.length - 1].evaluate()\n\t\tlet totalWeight = 0\n\t\tfor (let i = 0; i < this.numSolutions; i++) {\n\t\t\tlet weight = max - this.solutions[i].evaluate()\n\t\t\tif (this.weightExponent != 1.0)\n\t\t\t\tweight = Math.pow(weight, this.weightExponent)\n\t\t\ttotalWeight += weight\n\t\t\tthis.weights[i] = totalWeight\n\t\t}\n\t}\n\n\tselect(): Solution {\n\t\tlet r = Math.random() * this.totalWeight\n\t\tfor (let i = 0; i < this.weights.length; i++)\n\t\t\tif (r < this.weights[i])\n\t\t\t\treturn this.solutions[i]\n\t\tthrow new Error('Invalid population state')\n\t}\n\n\tgetIncumbent(): Solution {\n\t\treturn this.solutions[0]\n\t}\n\n\tsize(): number {\n\t\treturn this.solutions.length\n\t}\n\n\thasClone(other: Solution): boolean {\n\t\tfor (let i = 0; i < this.solutions.length; i++)\n\t\t\tif (other.evaluate() == this.solutions[i].evaluate()) return true\n\t\treturn false\n\t}\n\n\tcopySolutions(newGen: Population, numSolutions: number): void {\n\t\tnewGen.solutions = this.solutions.slice()\n\t}\n}\n\n// ----- The engine listener gets notified when a new generation is created -----\nexport interface EngineListener {\n\tengineStep(pop: Population, generationCount: number): void\n}\n\n\n// ----- The engine iterates through generations to optimize a solution -----\nexport abstract class Engine {\n\tparams: EngineParams\n\tstop = false\n\tgeneration: Population\n\tlistener: EngineListener\n\n\tconstructor(params: EngineParams) {\n\t\tthis.params = params\n\t}\n\n\trun(): void {\n\t\tlet generationCount = 0\n\t\tthis.generation = this.randomize()\n\t\tthis.generation.prepareForSelection()\n\t\twhile (!this.stop) {\n\t\t\tthis.step()\n\t\t\tgenerationCount++\n\t\t\tthis.fireStepEvent(this.generation, generationCount)\n\t\t}\n\t}\n\n\tsetListener(listener: EngineListener): void {\n\t\tthis.listener = listener\n\t}\n\n\tabstract newSolution():  Solution\n\n\t// -------------------------- Privates --------------------------\n\n\tprivate step(): void {\n\t\tlet newGen = new Population(this.params)\n\t\tthis.copyElite(this.generation, newGen)\n\t\tthis.generation = this.combine(this.generation, newGen)\n\t\twhile (this.generation.size() < this.params.population)\n\t\tthis.generation.add(this.newSolution())\n\t\tthis.generation.prepareForSelection()\n\t}\n\n\tprivate copyElite(oldGen: Population, newGen: Population): void {\n\t\toldGen.copySolutions(newGen, this.params.elite)\n\t}\n\n\tprivate combine(oldGen: Population, newGen: Population): Population {\n\t\tlet i = this.params.elite\n\t\tlet trials = 0\n\t\twhile (i < this.params.population && trials < this.params.population * 2) {\n\t\t\ttrials++\n\t\t\tlet father = this.generation.select()\n\t\t\tlet mother = this.generation.select()\n\t\t\tif (father.equals(mother)) continue\n\t\t\tif (Math.random() < this.params.invertRatio)\n\t\t\t\tfather = father.invert()\n\t\t\tlet children = father.combine(mother)\n\t\t\tfor (let child of children) {\n\t\t\t\tif (newGen.hasClone(child)) continue\n\t\t\t\tif (i < this.params.population) newGen.add(child)\n\t\t\t\ti++\n\t\t\t}\n\t\t}\n\t\treturn newGen\n\t}\n\n\tprivate fireStepEvent(pop: Population, generationCount: number): void {\n\t\tif (this.listener == null) return\n\t\tthis.listener.engineStep(pop, generationCount)\n\t}\n\n\tprivate randomize(): Population {\n\t\tlet generation = new Population(this.params)\n\t\tfor (let i = 0; i < this.params.population; i++)\n\t\t\tgeneration.add(this.newSolution())\n\t\treturn generation\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/engine.ts"],"sourceRoot":""}